# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - SkillChallengeWebApp

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      # Set up Node.js (for frontend build)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Install and build React frontend (Vite)
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Copy frontend build to wwwroot
        shell: pwsh
        run: |
          $wwwroot = "SkillChallenge/wwwroot"
          if (-Not (Test-Path $wwwroot)) {
            New-Item -ItemType Directory -Path $wwwroot
          }
          Copy-Item -Recurse -Force "frontend/dist/*" $wwwroot

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./SkillChallenge/SkillChallenge.csproj -c Release -o publish --no-build --self-contained false

      - name: Check output contents
        run: dir publish

      - name: Upload published app as artifact
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: ./publish

  deploy:
    runs-on: windows-latest
    needs: build
    permissions:
      id-token: write
      contents: read
 
    steps:
      - name: Download published artifact
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: ./publish  # <<< This ensures the path matches the deploy step

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_41E9D7C8278448DBA4FEF88E6B0253B5 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A7629F9238D94E98AF074B6E31E0E5E0 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_B1DCF174CBEB48BAADFF8EF13D140143 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'SkillChallengeWebApp'
          slot-name: 'Production'
          package: ./publish
